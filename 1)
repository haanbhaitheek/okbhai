1. a)
Consider the Sailor database given below. The primary keys are underlined.
Assume relevant data types for attributes.
SAILORS(Sid, Sname, Rating, Age)
BOATS(Bid, Bname, Colour)
RESERVES(Sid, Bid, day)
Create the above tables in SQL. Specify primary and foreign keys properly. Enter at least 5 tuples in
each table with relevant data. Solve the following queries.
 i. Find the names of sailors who have reserved at least one boat.
ANS:select distinct(sname) from soilr,res where rsid=sid
 ii. Find the Sid’s of sailors who have reserved a red (or) a green boat.
ANS:select rsid from boat,res where rbid=bid and clr="block" or clr="blue";
 iii. Find the Sid’s of sailors who have not reserved a boat.
ANS:select sid from soilr,res where sid not in(select rsid from res);

ANS:
create table soilr(sid int primary key,
sname varchar(10),
rate int, age int);
create table boat( bid int primary key,
bname varchar(19),
clr varchar(10));
create table res(rsid int,
rbid int,
day int,
foreign key(rsid) references soilr(sid),
foreign key(rbid) references boat(bid));
insert into soilr values(111,"aa",4,23);
insert into soilr values(112,"aa",4,23);
insert into soilr values(113,"aa",4,23);
insert into boat values(121,"baa","block");
insert into res values(111,121,45);
select distinct(sname) from soilr,res where rsid=sid
select rsid from boat,res where rbid=bid and clr="block" or clr="blue";
select sid from soilr,res where sid not in(select rsid from res);




1B.//Consider the following restaurant database with the following attributes -
Name, address –(building, street, area, pincode),id, cuisine, nearby landmarks, online
delivery- yes/no, famous for(name of the dish)
Create 10 collections with data relevant to the following questions. Write and execute MongoDB
queries:
 i. List the name and address of all restaurants in Bangalore with Italian cuisine
 ii. List the name, address and nearby landmarks of all restaurants in Bangalore where north
Indianthali is available


ANS:
use restaurant
switched to db restaurant
db.createCollection(“rest")
{ "ok" : 1 }
db.rest.insert({name:"McD",building:12,street:"KR",area:"JN",pin:072,ID:1,cuisine:"fast
food",landmark:"post office",od:"yes",famousfor:"cheese burger"});
WriteResult({ "nInserted" : 1 })
db.rest.insert({name:"Tailo",building:14, street:"MG", area:"Bangalore",pin:45,ID:2,
cuisine:"Italian",landmark:"bank",od:"yes",famousfor:"pasta"})
WriteResult({ "nInserted" : 1 })
db.rest.insert({name:"Kesar",building:15, street:"SS",area:"Bangalore",pin:55,ID:3, cuisine:"north
indian",landmark:"milk factory",od:"no",famousfor:"north indian thali"})
WriteResult({ "nInserted" : 1 })
//List the name and address of all restaurants in Bangalore with Italian cuisine.
db.rest.find({cuisine:"Italian",area:"Bangalore"},
{name:1,building:1,street:1,area:1,pin:1,_id:0}).pretty()
{ "name" : "Tailo", "building" : 14 , “street” : “MG” , “area” : “Bangalore” , “pin” : 45 }
//List the name, address and nearby landmarks of all restaurants in Bangalore where north
Indianthali is available.
db.rest.find({famousfor:"north indian thali",area:"Bangalore"},
{name:1,building:1,street:1,area:1,pin:1,landmark:1,_id:0})
{ "name" : "Kesar", "building" : 15 , “street” : “SS” , “area” : “Bangalore” , “pin” : 55 ,
"landmark" : "milk factory" } 
