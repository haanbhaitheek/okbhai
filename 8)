//8A)//Consider the Cricket database given below. The primary keys are underlined. Assume
PLAYER (PId, Lname, Fname, Country, Yborn, Bplace)
MATCH (MatchId, Team1,Team2, Ground, Date, Winner)
BATTING (MatchId, Pid, Nruns, Fours, Sixes)
BOWLING (MatchId, Pid, Novers, Maidens, Nruns, Nwickets)
Create the above tables in SQL. Specify primary and foreign keys properly. Enter at least 5 tuples in
each table with relevant data. Solve the following queries.
 i. Display the sorted list of ground names where Australia has played as team1
 ii. Find the match information of all matches in which Dhoni did batting.
 iii. Find the names of players who did batting in match 2689
create table PLAYER (
Pid int,
Lname varchar(10),
Fname varchar(10),
Country varchar(10),
Yborn date,
Bplace varchar(10),
primary key (Pid)
);
create table MATCHING (
MatchID int,
Team1 varchar(10),
Team2 varchar(10),
Ground varchar(10),
Date date,
Winner varchar(10),
primary key(MatchID)
);
create table BATTING (
MatchID int,
Pid int,
Nruns int,
Fours int,
Sixes int,
primary key(MatchID,Pid),foreign key(MatchID) references MATCHING(MatchID),foreign
key(Pid) references PLAYER(Pid)
);
create table BOWLING (
MatchID int,
Pid int,
Novers int,
Maidens varchar(10),
Nruns int,
Nwickets int,
primary key(MatchID,Pid),foreign key(MatchID) references MATCHING(MatchID),foreign
key(Pid) references PLAYER(Pid)
);
//insert values
insert into PLAYER values("1,"aa","Dhoni","india","01-jan-88","chennai");
insert into MATCHING values("12,"Australia","D2","china","01-jan-2012","india");
insert into BATTING values("12,1,20,4,4);
insert into BOWLING values("12,1,12,"cc",20,2);
//Display the sorted list of ground names where Australia has played as team1.
SELECT Ground
FROM MATCHING
WHERE Team1='Australia'
ORDER BY Ground;
//Find the match information of all matches in which Dhoni did batting.
SELECT *
FROM (PLAYER natural join MATCHING) natural join BATTING
WHERE Fname='Dhoni';
//Find the names of players who did batting in match 2689.
SELECT Fname,Lname
FROM (PLAYER natural join MATCHING) natural join BATTING
WHERE MatchID=2686;




//8B)Consider the following Movie table with the following attributes -
Actor_name,Actor_id, Actor_birthdate , Dirctor_name,Director_id, Director_birthdate, film_title,
year of production ,type (thriller, comedy, etc.)
Create 10 collections with data relevant to the following questions. Write and execute MongoDB
queries:
 i. List all the movies acted by John and Elly in the year 2012.
 ii. List only the name and type of the movie where Ram has acted sorted by movie names
db.createCollection("movie")
{ "ok" : 1 }
db.movie.insert([{act_n:"ram",act_id:13,act_bdate:"2/3/1997",dir_n:"williams",dir_id:101,dir_bdat
e:"12/9/1987",film:"battleship",year:2015,type:"thriller"}])
db.movie.insert([{act_n:"john",act_id:11,act_bdate:"1/2/1998",dir_n:"ram",dir_id:100,dir_bdate:"2/
3/1997",film:"john wick",year:2012,type:"killer"}])
db.movie.insert([{act_n:"elly",act_id:12,act_bdate:"4/12/1998",dir_n:"ram",dir_id:100,dir_bdate:"2
/3/1997",film:"aquaman",year:2012,type:"action"}])
db.movie.insert([{act_n:"ram",act_id:13,act_bdate:"2/3/1997",dir_n:"thomas",dir_id:103,dir_bdate:
"12/3/1999",film:"xxx",year:2018,type:"action"}])
db.movie.insert([{act_n:"john",act_id:11,act_bdate:"1/2/1998",dir_n:"ram",dir_id:100,dir_bdate:"2/
3/1997",film:"mr.bean",year:2018,type:"comedy"}])
//List all the movies acted by John and Elly in the year 2012.
db.movie.find({$and : [{act_n:{$in : ["john","elly"]}},{year:2012}]},{film:1}).pretty()
{ "_id" : ObjectId("5c273e247fd87cec5944fabf"), "film" : "john wick" }
{ "_id" : ObjectId("5c273e2e7fd87cec5944fac0"), "film" : "aquaman" }
//ii. List only the name and type of the movie where Ram has acted sorted by movie names.
db.movie.find({act_n:"ram"},{film:1,type:1}).sort({film:1}).pretty()
{ "_id" : ObjectId("5c273ddb7fd87cec5944fabd"), "film" : "battleship", "type" : "thriller" }
{ "_id" : ObjectId("5c273ef97fd87cec5944fac1"), "film" : "xxx", "type" : "action" }
